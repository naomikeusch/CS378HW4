import java.io.BufferedReader;
import java.io.FileReader;
import java.util.Random;


import weka.core.Instance;
import weka.core.Instances;
import weka.core.converters.ArffLoader;
import weka.classifiers.bayes.NaiveBayes;
import weka.core.converters.CSVLoader;
import weka.classifiers.Evaluation;

import java.io.File;

/**
 * This example trains NaiveBayes incrementally on data obtained
 * from the ArffLoader.
 *
 * @author FracPete (fracpete at waikato dot ac dot nz)
 */
 
 // https://www.youtube.com/watch?v=q3Gf6kqaJWA
public class classifiers {

  /**
   * Expects an ARFF file as first argument (class attribute is assumed
   * to be the last attribute).
   *
   * @param args        the commandline arguments
   * @throws Exception  if something goes wrong
   */
  public static void main(String[] args) throws Exception {
	  
	  
	  BufferedReader br = new BufferedReader(new FileReader("grades.csv"));
	  
	  Instances train = new Instances(br);
	  
	  train.setClassIndex(train.numAttributes() - 1);
	  
	  br.close();
	  
	  NaiveBayes nb = new NaiveBayes();
	  nb.buildClassifier(train);
	  
	  Evaluation eval = new Evaluation(train);
	  eval.crossValidateModel(nb, train, 10 , new Random(1));
	  System.out.println(eval.toSummaryString("\nResults\n=====\n", true));
	  System.out.println(eval.fMeasure(1) + " " + eval.precision(1) + " " + eval.recall(1));
	  
  }
}
